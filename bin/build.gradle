buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
    mavenCentral()
    flatDir {
        dirs 'deps/libs/plugins'
    }
  }
  dependencies {
    classpath fileTree(dir: 'deps/libs/plugins', include: '*.jar')
    classpath 'com.github.jengelman.gradle.plugins:shadow:5.2.0'
    classpath 'org.xbib.gradle.plugin:gradle-plugin-jflex:1.5.0'
  }
}

repositories {
    flatDir (dir: 'deps/libs/plugins')
    flatDir (dir: 'deps/libs/test')
    flatDir (dir: 'deps/libs/main')
}

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: "org.xbib.gradle.plugin.jflex"
mainClassName = 'apd67.cli.Main'

jar {
    manifest {
        attributes(
                'Main-Class': 'apd67.cli.Main'
        )
    }
}


dependencies {
  implementation 'commons-cli:commons-cli:1.4'
  implementation 'commons-io:commons-io:jar:2.6'
  implementation fileTree(dir: 'deps/libs/main', include: '*.jar')
  implementation fileTree(dir: 'deps/libs/test', include: '*.jar')

  // https://mvnrepository.com/artifact/commons-io/commons-io
  // implementation group: 'commons-io', name: 'commons-io', version: '2.8.0'

  // implementation fileTree(dir: 'libs/main', include: '*.jar')
  // testImplementation fileTree(dir: 'libs/test', include: '*.jar')
  // compileOnly fileTree(dir: 'libs/compile-only', include: '*.jar')
  // implementation 'com.google.code.gson:gson:2.8.5'
  // testImplementation 'junit:junit:4.12'
  // testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
}

sourceSets {
  main {
     jflex {
       srcDir "src/main/java/apd67/lexer"
     }
     java {
       // srcDir "/src/main/java/apd67/lexer"
     }
  }
}

build {
    dependsOn 'shadowJar'
}

task copyMainDependenciesToLib(type: Copy) {
    includeEmptyDirs = true
    into "deps/libs/main"
    from configurations.runtimeClasspath
}

task copyTestDependenciesToLib(type: Copy) {
    includeEmptyDirs = true
    into "deps/libs/test"
    from configurations.testRuntimeClasspath - configurations.runtimeClasspath
}

task copyCompileOnlyDependenciesToLib(type: Copy) {
    includeEmptyDirs = true
    into "deps/libs/compile-only"
    from configurations.compileClasspath - configurations.runtimeClasspath
}

task copyPluginJarsToLib(type: Copy) {
    includeEmptyDirs = true
    into "deps/libs/plugins"
    from buildscript.configurations.classpath
}

task copyDependenciesToLib{
    dependsOn 'copyMainDependenciesToLib'
    dependsOn 'copyTestDependenciesToLib'
    dependsOn 'copyCompileOnlyDependenciesToLib'
    dependsOn 'copyPluginJarsToLib'
}